#BlueJ class context
comment0.target=Equations
comment1.params=precision\ number
comment1.target=double\ round(double,\ double)
comment10.params=OutputNode
comment10.target=double\ DeltaZ(Node)
comment11.params=Weighti
comment11.target=double\ SigmaDeltaZWeights(Weight)
comment12.params=Weighti
comment12.target=double\ OutputPartialDerivative(Weight)
comment13.params=CurrentWeight
comment13.target=double\ CalculateHiddenLayerWeightGradient(Weight)
comment14.params=Weighti
comment14.target=double\ OutputPartialDerivativeBias(Weight)
comment15.params=BiasWeight
comment15.target=double\ CalculateHiddenLayerBiasWeightGradient(Weight)
comment16.params=Wi\ TotalNodeCountArray
comment16.target=double\ GradientChecking(Weight,\ Node[])
comment17.params=Weight\ LearningRate
comment17.target=void\ UpdateGeneralWeightFormula(Weight,\ double)
comment2.params=xx\ direction
comment2.target=double\ lengthdir_x(double,\ double)
comment3.params=yy\ direction
comment3.target=double\ lengthdir_y(double,\ double)
comment4.params=x1\ y1\ x2\ y2
comment4.target=double\ CalculateDistance(double,\ double,\ double,\ double)
comment5.params=APositionX\ APositionY\ BPositionX\ BPositionY
comment5.target=double\ CalculateAngle(int,\ int,\ int,\ int)
comment6.params=NodeSelected
comment6.target=double\ SummationOperator(Node)
comment7.params=xInput
comment7.target=double\ ActivationFunction(double)
comment8.params=OutputNode
comment8.target=double\ CalculateLocalError(Node)
comment9.params=CurrentWeight
comment9.target=double\ CalculateOutputLayerWeightGradient(Weight)
numComments=18
